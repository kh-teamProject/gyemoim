<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.gyemoim.mapper.StageMapper">
<!--(유진)리스트 띄우기  -->
    <select id="getPFList" resultType="com.team.gyemoim.dto.stage.StageListDTO">
      SELECT * FROM pf
      WHERE pf.startFlag NOT LIKE'%완료%'
    </select>

<!--  유진)Roll 띄우기  -->
    <select id="getRoll" resultType="com.team.gyemoim.dto.stage.RollDTO">
        SELECT * FROM roll
    </select>


    <!--(유진)deposit에 따라 값 달리 가져오기.-->
    <select id="filterList" resultType="com.team.gyemoim.dto.stage.StageListDTO">
        SELECT * FROM PF
        WHERE
        startFlag NOT LIKE'%완료%'AND(
        (#{deposit} = 70 AND pf.deposit BETWEEN 0 AND 700000)
        OR(#{deposit} = 150  AND pf.deposit BETWEEN 1000000 AND 1500000)
        OR (#{deposit} = 250  AND pf.deposit BETWEEN 2000000 AND 2500000)
        OR (#{deposit} = 350 AND pf.deposit BETWEEN 2800000 AND 3500000)
        )
    </select>

    <!--(유진) 입금액과 관심사에 맞춰 무작위 추천  -->
    <select id="recommend" resultType="com.team.gyemoim.dto.stage.StageListDTO">
        SELECT a.* from( SELECT pf.pfID,pf.pfName,pf.pfentry,pf.pfRate, pf.payment,pf.deposit,pf.interest,pf.startFlag,roll.receiveTurn, roll.uno
        FROM pf
        JOIN roll ON PF.PFID = roll.PFID
        ORDER BY DBMS_RANDOM.RANDOM) a ,member m
        WHERE m.uno= #{uno}
        and a.startFlag = '대기중'
        and a.interest = m.interest
        and m.monthlyLimit >= a.payment
        and  4 > ROWNUM
    </select>
    <!--(현지) <스테이지 생성> _스테이지 생성(PF)-->
    <insert id="stageCreate" >
        INSERT  INTO PF(pfID,pfName,pfEntry,pfRate,deposit,payment,interest)
        VALUES(PFID_PF_SEQ.NEXTVAL,#{pfName},#{pfEntry},#{pfRate},#{deposit},#{payment},#{interest})
    </insert>

    <!--(현지) <스테이지 생성> _참가 데이터 -->

    <insert id="stageParticipate">
        INSERT INTO Roll(pfID,uno,receiveTurn,pfMaster)
        VALUES(PFID_PF_SEQ.CURRVAL,#{uNo},#{receiveTurn},'M')
    </insert>

    <!--(현지) <스테이지 생성> _중복체크 -->
    <select id="checkPfName" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM pf
        WHERE pfName=#{pfName}
    </select>

    <!--(현지) <스테이지 생성> _수령예정표-->
    <select id="importGet"  resultType="com.team.gyemoim.dto.stage.ImportDTO">
        SELECT * FROM receiptSchedule
        WHERE pfRate=#{pfRate}
        and deposit=#{deposit}
    </select>

    <!--(현지) <스테이지 생성> _스테이지 pfID 가져오기-->
    <select id="stagePartIn1" parameterType="java.util.HashMap" resultType="com.team.gyemoim.dto.stage.StageCreateDTO">
        SELECT pfID
        FROM PF
        WHERE pfName=#{pfName}
    </select>

    <!--(현지) <스테이지 생성> _스테이지 정보 가져오기-->
    <select id="stagePartIn2" parameterType="java.util.HashMap" resultType="com.team.gyemoim.dto.stage.ImportDTO">
        SELECT DISTINCT i.uPayment,i.uTotalReceipts,i.uRate,i.uTotalPayment
        FROM ROLL r
        JOIN receiptSchedule i ON i.receiveTurn = r.receiveTurn
        JOIN PF p ON p.pfRate = i.pfRate
        WHERE r.uNo =#{uNo}
        AND p.pfName = #{pfName}
        AND p.pfID = r.pfID
        AND p.deposit = i.deposit
    </select>

    <!--(찬희)스테이지 참여 시 roll insert-->
    <insert id="rollIn">
        INSERT INTO roll(uNo, pfID, receiveTurn)
        VALUES (#{uNo} , #{pfID}, #{receiveTurn})
    </insert>

    <!--(찬희)roll의 uNo 갯수 조회 -->
    <select id="RollUnoCount" resultType="int">
        SELECT COUNT(uNo)
        FROM roll
        WHERE pfID = #{pfID}
    </select>

    <!--(찬희) 출금 이력 남기기 -->
    <insert id="stageWithdraw">
        INSERT INTO MYACCOUNTHISTORY(UNO, BANKNAME, BANKACCOUNTNUMBER, TRANSACTIONAMOUNT, BANKHISTORY, TRADINGHOURS)
        VALUES (#{uNo},#{pfName}, #{pfID}, #{uPayment}, '출금', SYSDATE)
    </insert>
    <!--(찬희) 지급 이력 남기기 -->
    <insert id="depositHistoryInsert">
        INSERT INTO MYACCOUNTHISTORY(UNO, BANKNAME, BANKACCOUNTNUMBER, TRANSACTIONAMOUNT, BANKHISTORY, TRADINGHOURS)
        VALUES (#{uNo},#{pfName}, #{pfID}, #{uTotalReceipts}, '곗돈 지급', SYSDATE)
    </insert>

    <!--(찬희)PF의 pfEntry 값 조회 -->
    <select id="pfEntryValue" resultType="int">
        SELECT pfEntry
        FROM PF
        WHERE pfID = #{pfID}
    </select>

    <!--(찬희)PF의 startDate 값 조회 -->
    <select id="getStartDate" resultType="java.util.Date">
        SELECT startDate
        FROM PF
        WHERE pfID = #{pfID}
    </select>

    <!--(찬희)PF의 startFlag를 '참여중'으로 update-->
    <update id="stageStart" parameterType="com.team.gyemoim.dto.stage.StagePfDTO">
        UPDATE PF
        SET startFlag = '참여중'
        WHERE pfID = #{pfID}
    </update>

    <!--(찬희)PF의 startDate를 SYSDATE update-->
    <update id="startDateInsert" parameterType="com.team.gyemoim.dto.stage.StagePfDTO">
        UPDATE PF
        SET startDate = SYSDATE
        WHERE pfID = #{pfID}
    </update>

    <!--(찬희)PF의 endDate를 SYSDATE update-->
    <update id="endDateInsert" parameterType="com.team.gyemoim.dto.stage.StagePfDTO">
        UPDATE PF
        SET endDate = #{endDate}
        WHERE pfID = #{pfID}
    </update>

    <!--(찬희)스테이지에 관한 pfList -->
    <select id="getPfList" resultType="com.team.gyemoim.dto.stage.StagePfDTO">
        SELECT * FROM pf
        WHERE pfID = #{pfID}
    </select>

    <!--(찬희)개인 RollList -->
    <select id="getRollList" resultType="com.team.gyemoim.dto.stage.StageRollDTO"
            parameterType="com.team.gyemoim.dto.stage.StageRollDTO">
        SELECT DISTINCT r.*, i.uPayment, i.uTotalPayment, i.uTotalReceipts, i.uReceipt
        FROM ROLL r
        JOIN receiptSchedule i ON i.receiveTurn = r.receiveTurn
        JOIN PF p ON p.pfRate = i.pfRate
        WHERE p.deposit = i.deposit
        AND r.pfID = #{pfID}
        AND p.pfID = #{pfID}
        AND uNo = #{uNo}
    </select>

    <!--(찬희)참여중인 MemberList -->
    <select id="getMemList" resultType="com.team.gyemoim.dto.stage.StageRollListDTO">
        SELECT DISTINCT p.pfEntry, r.uNo, r.receiveTurn, r.pfMaster, CASE WHEN r.uNo IS NULL THEN NULL ELSE m.name END AS
        name
        FROM pf p
        LEFT JOIN roll r ON p.pfID = r.pfID
        LEFT JOIN member m ON r.uNo = m.uNo
        WHERE r.pfID = #{pfID}
        ORDER BY r.receiveTurn
    </select>

    <!--(찬희)수령예정표 갖고오기-->
    <select id="getImportList" resultType="com.team.gyemoim.dto.stage.StageReceiptDTO">
        SELECT DISTINCT rs.*
        FROM receiptSchedule rs, pf p
        WHERE rs.pfRate = p.pfRate
        AND rs.deposit = p.deposit
        AND p.pfID = #{pfID}
    </select>

    <!--(찬희) MyAccount 정보 갖고오기-->
    <select id="getMyAccount" resultType="Integer">
        SELECT mybalance FROM MyAccount
        WHERE uNo = #{uNo}
    </select>

    <!--(찬희)스테이지 나갈 때 roll_uNo:delete-->
    <delete id="rollDelete" parameterType="com.team.gyemoim.dto.stage.StageRollDTO">
        DELETE FROM roll
        WHERE uNo = #{uNo}
        AND pfID = #{pfID}
    </delete>

    <!--(찬희)입금하기:pf 계모임잔액에 uPayment만큼 update-->
    <update id="stageBalanceUpdate" parameterType="com.team.gyemoim.dto.stage.StageRollDTO">
        UPDATE pf
        SET stageBalance = stageBalance + #{uPayment}
        WHERE pfID = #{pfID}
    </update>

    <!--(찬희)입금하기:My계좌에서 uPayment만큼 빼기-->
    <update id="myAccountUPaymentUpdate" parameterType="com.team.gyemoim.dto.stage.StageRollDTO">
        UPDATE MyAccount
        SET myBalance = myBalance - #{uPayment}
        WHERE uNo = #{uNo}
    </update>

    <!--(찬희)입금하기:입금 횟수 mapper.xml에서 +1-->
    <update id="depositCntPlus" parameterType="com.team.gyemoim.dto.stage.StageRollDTO">
        UPDATE roll
        SET depositCnt = depositCnt + 1
        WHERE uNo = #{uNo}
        AND pfID = #{pfID}
    </update>

    <!--(찬희)입금하기:입금 누적 금액 update-->
    <update id="stageAmountUpdate" parameterType="com.team.gyemoim.dto.stage.StageRollDTO">
        UPDATE roll
        SET stageAmount = stageAmount + #{uPayment}
        WHERE uNo = #{uNo}
        AND pfID = #{pfID}
    </update>

    <!--(찬희) 입금식별 Y로 update-->
    <update id="stagePaymentCheckUpdate">
        UPDATE roll
        SET paymentCheck = 'Y'
        WHERE uNo = #{uNo}
        AND pfID = #{pfID}
    </update>
    <!--(찬희) pf테이블의 현재 stageBalance 값 조회하기-->
    <select id="getStageBalance" parameterType="com.team.gyemoim.dto.stage.StageRollDTO" resultType="Integer">
        SELECT stageBalance
        FROM pf
        WHERE pfID = #{pfID}
    </select>

    <!--(찬희) pf테이블의 약정금 조회하기-->
    <select id="getStageDeposit" parameterType="com.team.gyemoim.dto.stage.StageRollDTO" resultType="Integer">
        SELECT deposit
        FROM pf
        WHERE pfID = #{pfID}
    </select>

    <!--(찬희) pf테이블의 지급순서 조회하기-->
    <select id="getPaymentOrderValue" parameterType="com.team.gyemoim.dto.stage.StageRollDTO" resultType="Integer">
        SELECT paymentOrder
        FROM pf
        WHERE pfID = #{pfID}
    </select>

    <!--(찬희)stageBalance - *번의 uTotalReceipts-->
    <update id="stageBalanceMinus">
        UPDATE PF
        SET stageBalance = stageBalance - #{uTotalReceipts}
        WHERE pfID = #{pfID}
    </update>

    <!--(찬희)현재 *번째의 UTotalReceipts 정보 갖고오기-->
    <select id="getUTotalReceipts" parameterType="com.team.gyemoim.dto.stage.StageRollDTO" resultType="Integer">
        SELECT rs.uTotalReceipts
        FROM receiptSchedule rs, pf pf
        WHERE rs.DEPOSIT = pf.DEPOSIT AND rs.pfRate = pf.pfRate AND rs.receiveTurn = pf.paymentOrder AND (
        SELECT pf.pfID
        FROM roll r
        WHERE pf.pfID = r.pfID AND pf.paymentOrder = r.receiveTurn
        ) = #{pfID}
    </select>
    <!--(찬희)현재 *번째의 uNo 정보 갖고오기-->
    <select id="getUNoForMyAccount" parameterType="com.team.gyemoim.dto.stage.StageRollDTO" resultType="Integer">
        SELECT uNo
        FROM pf pf, roll r
        WHERE pf.pfID = #{pfID} AND r.pfID = #{pfID} AND pf.paymentOrder = r.receiveTurn
    </select>

    <!--(찬희)순서에 맞게 지급 *번의 myBalance + stageBalance-->
    <update id="stagePaymentOrder">
        UPDATE MyAccount
        SET myBalance = myBalance + #{uTotalReceipts}
        WHERE uno = #{uNo}
    </update>

    <!--(찬희)전원 입금식별자 'Y' -> 'N' -->
    <update id="AllPaymentCheckUpdate">
        UPDATE roll
        SET paymentCheck = 'N'
    </update>
    <!--(찬희) 지급 순서 저장-->
    <update id="paymentOrderSave">
        UPDATE PF
        SET paymentOrder = paymentOrder + 1
        WHERE pfID = #{pfID}
    </update>

    <!--(찬희) member 정보 불러오기-->
    <select id="getMemberInfo" parameterType="com.team.gyemoim.dto.stage.StageRollDTO" resultType="com.team.gyemoim.vo.MemberVO">
        SELECT *
        FROM MEMBER
        WHERE uNo = #{uNo}
    </select>

    <!--(찬희)getLatestStageInDate-->
    <select id="getLatestStageInDate" resultType="java.util.Date" parameterType="com.team.gyemoim.dto.stage.StageINDTO">
        SELECT MIN(stageInDate)
        FROM roll
        WHERE pfID = #{pfID}
    </select>
    <!--(찬희) -->
    <update id="pfMasterUpdate"  parameterType="java.util.Map">
        UPDATE roll
        SET pfMaster = 'M'
        WHERE stageInDate = #{stageInDate}
    </update>

    <!--(찬희) getPfMasterInfo-->
    <select id="getPfMasterInfo" resultType="String" parameterType="com.team.gyemoim.dto.stage.StageINDTO">
        SELECT pfMaster
        FROM roll
        WHERE uNo = #{uNo}
        AND pfID = #{pfID}
    </select>


    <!-- (지연) 선택한 계모임 정보 가져오기, 스테이지에 관한 pfInfo -->
    <select id="getPfInfo" resultType="com.team.gyemoim.dto.stage.StageSelectDTO">
        SELECT * FROM pf
        WHERE pfID = #{pfID}
    </select>

    <!-- (지연) 선택한 계모임 정보 가져오기, 계모임 장 Roll 정보 가져오기 -->
    <select id="getStageSelectRoll" resultType="com.team.gyemoim.dto.stage.RollDTO">
        SELECT DISTINCT r.uNo, r.pfMaster, r.pfID, r.receiveTurn, m.name
        FROM Roll r, MEMBER m, PF p
        WHERE p.pfID = #{pfID}
        AND r.pfID = p.pfID
        AND r.uNo = m.uNo
        AND r.pfMaster = 'M'
    </select>

    <!-- (지연)수령예정표 가져오기 -->
    <select id="getReceipt" resultType="com.team.gyemoim.dto.stage.PfDTO">
        SELECT DISTINCT rs.*
        FROM receiptSchedule rs, pf p
        WHERE rs.pfRate = p.pfRate
        AND rs.deposit = p.deposit
        AND p.pfID = #{pfID}
        ORDER BY rs.receiveTurn ASC
    </select>

    <select id="getParti" resultType="com.team.gyemoim.dto.stage.PartiListDTO">
        select *
        from pf
        where pfID = #{pfID}
    </select>

    <select id="getPartRoll" resultType="com.team.gyemoim.vo.RollVO">
        select *
        from roll
        where pfID = #{pfID}
    </select>

    <select id="getTurnRoll" resultType="com.team.gyemoim.dto.stage.PartiListDTO">
        SELECT DISTINCT rs.*
        FROM receiptSchedule rs, PF p
        WHERE rs.pfRate = p.pfRate
        AND rs.deposit = p.deposit
        AND p.pfID = #{pfID}
        ORDER BY rs.receiveTurn ASC
    </select>

    <!--(찬희) stageDelete -->
    <delete id="stageDelete" parameterType="com.team.gyemoim.dto.stage.StageINDTO">
        DELETE
        FROM pf
        WHERE pfID = #{pfID}
    </delete>

</mapper>